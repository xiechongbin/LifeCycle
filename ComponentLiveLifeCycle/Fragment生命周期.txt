 activity 加载fragment

fragment add时的生命周期：onAttach-->onCreate-->onCreateView-->onActivityCreated-->onStart-->onResume

按下返回键 onPause-->onStop-->onDestroyView-->onDestroy-->onDetach

按下home键： onPause-->onStop——————————再次按下应用图标： onStart-->onResume

hide: 不引起生命周期的变化

show:不引起生命周期的变化

replace: 新的：onAttach-->onCreate-->onCreateView-->onActivityCreated-->onStart-->onResume 旧的：onPause-->onStop-->onDestroyView-->onDestroy-->onDetach


remove:onPause-->onStop-->onDestroyView-->onDestroy-->onDetach


Service 生命周期
startService：onCreate-->onStartCommand-->onStart
 bindService:onCreate-->onBind



1. 当一个fragment被创建的时候，它会经历以下状态.

onAttach()
onCreate()
onCreateView()
onActivityCreated()
2. 当这个fragment对用户可见的时候，它会经历以下状态。

onStart()
onResume()
3. 当这个fragment进入“后台模式”的时候，它会经历以下状态。

onPause()
onStop()
4. 当这个fragment被销毁了（或者持有它的activity被销毁了），它会经历以下状态。

onPause()
onStop()
onDestroyView()
onDestroy()
onDetach()
5. 就像activitie一样，在以下的状态中，可以使用Bundle对象保存一个fragment的对象。

onCreate()
onCreateView()
onActivityCreated()
6. fragments的大部分状态都和activitie很相似，但fragment有一些新的状态。

onAttached() —— 当fragment被加入到activity时调用（在这个方法中可以获得所在的activity）。
onCreateView() —— 当activity要得到fragment的layout时，调用此方法，fragment在其中创建自己的layout(界面)。
onActivityCreated() —— 当activity的onCreated()方法返回后调用此方法
onDestroyView() —— 当fragment中的视图被移除的时候，调用这个方法。
onDetach() —— 当fragment和activity分离的时候，调用这个方法。
一旦activity进入resumed状态（也就是running状态），你就可以自由地添加和删除fragment了。因此，只有当activity在resumed状态时，fragment的生命周期才能独立的运转，其它时候是依赖于activity的生命周期变化的。


